@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ex: <http://example.com/ns#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.

@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix bio: <http://purl.org/vocab/bio/0.1/> .
@prefix gramps: <http://gramps-project.org/xml/1.7.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix pnv: <https://w3id.org/pnv#> .

@prefix grp: <http://www.gramps-project.com/ns> .
@prefix lfd: <http://lfd.com/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix bibo: <http://purl.org/ontology/bibo/> .

@base <http://example.com/ns#>.

<#TagSchemeMapping>
  a rr:TriplesMap;

  rr:subjectMap [
    rr:template "http://mycorpus.com/conceptScheme/Tags";
    rr:class skos:conceptScheme
  ];

  rr:predicateObjectMap [
    rr:predicate skos:prefLabel;
    rr:objectMap [ rr:constant "Tags" ]
  ];
.

<#TagMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/tags/tag";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/conceptScheme/Tag/{@handle}";
    rr:class skos:Concept
  ];

  rr:predicateObjectMap [
    rr:predicate skos:prefLabel;
    rr:objectMap [ rml:reference "@name" ]
  ];

  rr:predicateObjectMap [
    rr:predicate skos:inScheme;
    rr:objectMap [ rr:constant "http://mycorpus.com/conceptScheme/Tags" ]
  ];
.

<#AttributeSchemeMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "distinct-values(/database/people/person/attribute/@type)";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/AttributeScheme/{.}";
    rr:class skos:conceptScheme
  ];

  rr:predicateObjectMap [
    rr:predicate skos:prefLabel;
    rr:objectMap [ rml:reference "."  ]
  ];
.

<#AttributeConceptMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "distinct-values(/database/people/person/attribute/concat(@type, '---|---', @value))";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/AttributeConcept/{substring-before(.,'---|---')}/{substring-after(.,'---|---')}";
    rr:class skos:Concept;
  ];

  rr:predicateObjectMap [
    rr:predicate skos:inScheme;
    rr:objectMap [ rr:template "http://mycorpus.com/AttributeScheme/{substring-before(.,'---|---')}"; ]
  ];

  rr:predicateObjectMap [
    rr:predicate skos:prefLabel;
    rr:objectMap [ rml:reference "substring-after(.,'---|---')" ]
  ];
.

<#AttributeOccurrenceMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/people/person/attribute";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/AttributeOccurrence/{count(preceding::attribute)}";
    rr:class grp:AttributeReference;
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [ rr:template "http://mycorpus.com/AttributeConcept/{@type}/{@value}"; ]
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [
      rr:parentTriplesMap <#CitationMapping>;
      rr:joinCondition [
        rr:child "citationref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];
.

<#NoteMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/notes/note";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Note/{@id}";
    rr:class bibo:Note;
  ];

  rr:predicateObjectMap [
    rr:predicate bibo:content;
    rr:objectMap [ rml:reference "text" ]
  ];

.


<#ObjectImageMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/objects/object[file/@mime = 'image/jpeg']";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Image/{@id}";
    rr:class bibo:Image;
  ];

  rr:predicateObjectMap [
    rr:predicate bibo:locator;
    rr:objectMap [ rml:reference "file/@src" ]
  ];

  rr:predicateObjectMap [
    rr:predicate bibo:shortDescription;
    rr:objectMap [ rml:reference "file/description" ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:checksum;
    rr:objectMap [ 
      rml:reference "file/@checksum" ;
    ]
  ];
.

<#ObjectOtherMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/objects/object[not(file/@mime = 'image/jpeg')]";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Document/{@id}";
    rr:class bibo:Document;
  ];

  rr:predicateObjectMap [
    rr:predicate bibo:locator;
    rr:objectMap [ rml:reference "file/@src" ]
  ];

  rr:predicateObjectMap [
    rr:predicate bibo:shortDescription;
    rr:objectMap [ rml:reference "file/description" ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:checksum;
    rr:objectMap [ 
      rml:reference "file/@checksum" ;
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:mime;
    rr:objectMap [ 
      rml:reference "file/@mime" ;
    ]
  ];
.

<#PlaceobjMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/places/placeobj";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Place/{@id}";
    rr:class lfd:Place;
  ];

  rr:predicateObjectMap [
    rr:predicate lfd:placeType;
    rr:objectMap [ rml:reference "@type" ]
  ];

  rr:predicateObjectMap [
    rr:predicate lfd:placeTitle;
    rr:objectMap [ rml:reference "ptitle" ]
  ];

  rr:predicateObjectMap [
    rr:predicate lfd:placeName;
    rr:objectMap [ 
      rml:reference "pname/@value" ;
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate lfd:longitude;
    rr:objectMap [ rml:reference "coord/@long" ]
  ];

  rr:predicateObjectMap [
    rr:predicate lfd:latitude;
    rr:objectMap [ rml:reference "coord/@lat" ]
  ];

  rr:predicateObjectMap [
    rr:predicate lfd:parentPlace;
    rr:objectMap [
      rr:parentTriplesMap <#PlaceobjMapping>;
      rr:joinCondition [
        rr:child "placeref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [
      rr:parentTriplesMap <#CitationMapping>;
      rr:joinCondition [
        rr:child "citationref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate skos:note;
    rr:objectMap [
      rr:parentTriplesMap <#NoteMapping>;
      rr:joinCondition [
        rr:child "noteref/@hlink";
        rr:parent "@handle";
      ]
    ]
    rr:class bibo:Document;
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:title;
    rr:objectMap [ rml:reference "stitle" ]
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [
      rr:parentTriplesMap <#ObjectImageMapping>;
      rr:joinCondition [
        rr:child "objref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [
      rr:parentTriplesMap <#ObjectOtherMapping>;
      rr:joinCondition [
        rr:child "objref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];
.

<#CitationMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/citations/citation";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Citation/{@id}";
    rr:class cito:Citation
  ];

  rr:predicateObjectMap [
    rr:predicate bibo:pages;
    rr:objectMap [ rml:reference "page" ]
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:date;
    rr:objectMap [ rml:reference "dateval/@val" ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:source;
    rr:objectMap [
      rr:parentTriplesMap <#SourceMapping>;
      rr:joinCondition [
        rr:child "sourceref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];
.

<#EventMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/events/event";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Event/{@id}";
    rr:class bio:Event
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:type;
    rr:objectMap [ rml:reference "type" ]
  ];

  rr:predicateObjectMap [
    rr:predicate bio:date;
    rr:objectMap [ rml:reference "dateval/@val" ]
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:description;
    rr:objectMap [ rml:reference "description" ]
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [
      rr:parentTriplesMap <#CitationMapping>;
      rr:joinCondition [
        rr:child "citationref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate bio:place;
    rr:objectMap [
      rr:parentTriplesMap <#PlaceobjMapping>;
      rr:joinCondition [
        rr:child "place/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];
.

<#NameMapping>
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/people/person/name";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Name/{concat(../@id, '-', @type)}";
    rr:class pnv:PersonName
  ];

  rr:predicateObjectMap [
    rr:predicate pnv:surname;
    rr:objectMap [ rml:reference "./surname" ]
  ];

  rr:predicateObjectMap [
    rr:predicate pnv:givenName;
    rr:objectMap [ rml:reference "./first" ]
  ];

  rr:predicateObjectMap [
    rr:predicate pnv:nameSpecification;
    rr:objectMap [ rml:reference "./@type" ]
  ];
.

<#PersonMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/people/person";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Person/{@id}";
    rr:class foaf:Person
  ];

  rr:predicateObjectMap [
    rr:predicate foaf:gender;
    rr:objectMap [
      rml:reference "gender";
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate foaf:givenName;
    rr:objectMap [
      rml:reference "name[@type='Birth Name']/first"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate foaf:familyName;
    rr:objectMap [
      rml:reference "name[@type='Birth Name']/surname"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate pnv:hasName;
    rr:objectMap [
      rr:parentTriplesMap <#NameMapping>;
      rr:joinCondition [
        rr:child "@id";
        rr:parent "parent::person/@id";
      ]
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [
      rr:parentTriplesMap <#TagMapping>;
      rr:joinCondition [
        rr:child "tagref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate bio:agent;
    rr:objectMap [
      rr:parentTriplesMap <#EventMapping>;
      rr:joinCondition [
        rr:child "eventref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:parentInFamily;
    rr:objectMap [
      rr:parentTriplesMap <#FamilyMapping>;
      rr:joinCondition [
        rr:child "parentin/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:childOfFamily;
    rr:objectMap [
      rr:parentTriplesMap <#FamilyMapping>;
      rr:joinCondition [
        rr:child "childof/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [
      rr:parentTriplesMap <#CitationMapping>;
      rr:joinCondition [
        rr:child "citationref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

.

<#Personne2AttributeMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/people/person/attribute";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Person/{../@id}";
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [ rr:template "http://mycorpus.com/AttributeOccurrence/{count(preceding::attribute)}"; ]
  ];
.

<#FamilyMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "sample/gramps.xml" ;
    rml:iterator "/database/families/family";
    rml:referenceFormulation ql:XPath;
  ];

  rr:subjectMap [
    rr:template "http://mycorpus.com/Family/{@id}";
    rr:class grp:Family
  ];

  rr:predicateObjectMap [
    rr:predicate dcterms:references;
    rr:objectMap [
      rr:parentTriplesMap <#CitationMapping>;
      rr:joinCondition [
        rr:child "citationref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:fatherInFamily;
    rr:objectMap [
      rr:parentTriplesMap <#PersonMapping>;
      rr:joinCondition [
        rr:child "father/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:motherInFamily;
    rr:objectMap [
      rr:parentTriplesMap <#PersonMapping>;
      rr:joinCondition [
        rr:child "mother/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:offspringInFamily;
    rr:objectMap [
      rr:parentTriplesMap <#PersonMapping>;
      rr:joinCondition [
        rr:child "childref/@hlink";
        rr:parent "@handle";
      ]
        rr:parent "@handle";
      ]
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate grp:offspringInFamily;
    rr:objectMap [
      rr:parentTriplesMap <#PersonMapping>;
      rr:joinCondition [
        rr:child "childref/@hlink";
        rr:parent "@handle";
      ]
    ]
  ];
.
